# Generated by Django 5.2.1 on 2025-06-03 21:19

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Regiao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(choices=[('bissau', 'Bissau'), ('bafata', 'Bafatá'), ('biombo', 'Biombo'), ('bolama', 'Bolama/Bijagós'), ('cacheu', 'Cacheu'), ('gabu', 'Gabú'), ('oio', 'Oio'), ('quinara', 'Quinara'), ('tombali', 'Tombali')], max_length=50, unique=True)),
                ('codigo_regiao', models.CharField(max_length=10, unique=True)),
                ('populacao_estimada', models.PositiveIntegerField()),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('caracteristicas_climaticas', models.CharField(choices=[('tropical_humido', 'Tropical Húmido'), ('tropical_seco', 'Tropical Seco'), ('savana', 'Savana'), ('costeiro', 'Costeiro')], max_length=30)),
                ('area_km2', models.PositiveIntegerField(help_text='Área em quilômetros quadrados')),
                ('densidade_populacional', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('hospitais_regionais', models.PositiveIntegerField(default=0)),
                ('centros_saude', models.PositiveIntegerField(default=0)),
                ('postos_saude', models.PositiveIntegerField(default=0)),
                ('medicos_por_1000hab', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Região',
                'verbose_name_plural': 'Regiões',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('codigo_postal', models.CharField(blank=True, max_length=20, null=True)),
                ('populacao', models.PositiveIntegerField()),
                ('tipo', models.CharField(choices=[('urbana', 'Urbana'), ('rural', 'Rural'), ('semi_urbana', 'Semi-urbana')], max_length=15)),
                ('distancia_hospital_km', models.PositiveIntegerField(help_text='Distância ao hospital mais próximo em km')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('tem_centro_saude', models.BooleanField(default=False)),
                ('tem_posto_saude', models.BooleanField(default=False)),
                ('tem_farmacia', models.BooleanField(default=False)),
                ('tem_ambulancia', models.BooleanField(default=False)),
                ('tem_estrada_asfaltada', models.BooleanField(default=False)),
                ('tem_internet', models.BooleanField(default=False)),
                ('tem_rede_movel', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('regiao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cidades', to='geografia.regiao')),
            ],
            options={
                'verbose_name': 'Cidade/Sector',
                'verbose_name_plural': 'Cidades/Sectores',
                'ordering': ['regiao', 'nome'],
                'unique_together': {('regiao', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Tabanca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('infraestrutura_saude', models.CharField(choices=[('nenhuma', 'Nenhuma'), ('basica', 'Básica'), ('completa', 'Completa')], max_length=15)),
                ('tem_agente_saude_comunitario', models.BooleanField(default=False)),
                ('acesso_agua_potavel', models.BooleanField(default=False)),
                ('fonte_agua_principal', models.CharField(blank=True, max_length=50, null=True)),
                ('acesso_eletricidade', models.BooleanField(default=False)),
                ('tem_saneamento_basico', models.BooleanField(default=False)),
                ('populacao_estimada', models.PositiveIntegerField(blank=True, null=True)),
                ('numero_familias', models.PositiveIntegerField(blank=True, null=True)),
                ('principal_atividade_economica', models.CharField(blank=True, max_length=100, null=True)),
                ('grupo_etnico_predominante', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tabancas', to='geografia.cidade')),
            ],
            options={
                'verbose_name': 'Tabanca/Bairro',
                'verbose_name_plural': 'Tabancas/Bairros',
                'ordering': ['cidade', 'nome'],
                'unique_together': {('cidade', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='IndicadorSaude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.PositiveIntegerField()),
                ('mes', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('nascimentos', models.PositiveIntegerField(default=0)),
                ('obitos', models.PositiveIntegerField(default=0)),
                ('taxa_natalidade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('taxa_mortalidade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('casos_malaria', models.PositiveIntegerField(default=0)),
                ('casos_dengue', models.PositiveIntegerField(default=0)),
                ('casos_tuberculose', models.PositiveIntegerField(default=0)),
                ('casos_diabetes', models.PositiveIntegerField(default=0)),
                ('casos_hipertensao', models.PositiveIntegerField(default=0)),
                ('casos_desnutricao', models.PositiveIntegerField(default=0)),
                ('cobertura_vacinal_infantil', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('fonte_dados', models.CharField(default='Sistema Médico-IA', max_length=100)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geografia.cidade')),
                ('regiao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geografia.regiao')),
                ('tabanca', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geografia.tabanca')),
            ],
            options={
                'verbose_name': 'Indicador de Saúde',
                'verbose_name_plural': 'Indicadores de Saúde',
                'ordering': ['-ano', '-mes', 'regiao'],
                'unique_together': {('regiao', 'cidade', 'tabanca', 'ano', 'mes')},
            },
        ),
    ]
