# Generated by Django 5.2.1 on 2025-06-03 21:19

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geografia', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_utente', models.CharField(editable=False, max_length=20, unique=True)),
                ('nome_completo', models.CharField(max_length=200)),
                ('data_nascimento', models.DateField()),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro'), ('NI', 'Não Informado')], max_length=2)),
                ('estado_civil', models.CharField(choices=[('solteiro', 'Solteiro/a'), ('casado', 'Casado/a'), ('uniao_facto', 'União de Facto'), ('divorciado', 'Divorciado/a'), ('viuvo', 'Viúvo/a')], default='solteiro', max_length=15)),
                ('endereco_completo', models.TextField()),
                ('profissao', models.CharField(blank=True, max_length=100, null=True)),
                ('nivel_escolaridade', models.CharField(choices=[('analfabeto', 'Analfabeto/a'), ('primario_incompleto', 'Ensino Primário Incompleto'), ('primario_completo', 'Ensino Primário Completo'), ('secundario_incompleto', 'Ensino Secundário Incompleto'), ('secundario_completo', 'Ensino Secundário Completo'), ('tecnico', 'Ensino Técnico'), ('superior_incompleto', 'Ensino Superior Incompleto'), ('superior_completo', 'Ensino Superior Completo'), ('pos_graduacao', 'Pós-graduação')], max_length=25)),
                ('renda_familiar_mensal', models.CharField(choices=[('0_50', '0 - 50.000 CFA'), ('50_100', '50.000 - 100.000 CFA'), ('100_200', '100.000 - 200.000 CFA'), ('200_300', '200.000 - 300.000 CFA'), ('300_500', '300.000 - 500.000 CFA'), ('500_mais', 'Mais de 500.000 CFA'), ('nao_informado', 'Não Informado')], max_length=15)),
                ('numero_pessoas_casa', models.PositiveIntegerField(default=1)),
                ('tipo_habitacao', models.CharField(choices=[('casa_alvenaria', 'Casa de Alvenaria'), ('casa_madeira', 'Casa de Madeira'), ('casa_mista', 'Casa Mista'), ('choupana', 'Choupana/Casa Tradicional'), ('apartamento', 'Apartamento'), ('quarto_alugado', 'Quarto Alugado'), ('outros', 'Outros')], max_length=20)),
                ('tem_agua_potavel', models.BooleanField(default=False)),
                ('fonte_agua', models.CharField(blank=True, max_length=50, null=True)),
                ('tem_saneamento_basico', models.BooleanField(default=False)),
                ('tem_energia_eletrica', models.BooleanField(default=False)),
                ('meio_transporte_principal', models.CharField(blank=True, max_length=50, null=True)),
                ('tempo_deslocamento_hospital', models.PositiveIntegerField(blank=True, help_text='Tempo em minutos para chegar ao hospital', null=True)),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.5')), django.core.validators.MaxValueValidator(Decimal('300.0'))])),
                ('altura', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.30')), django.core.validators.MaxValueValidator(Decimal('2.50'))])),
                ('imc', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=4, null=True)),
                ('tipo_sanguineo', models.CharField(blank=True, max_length=5, null=True)),
                ('pressao_arterial_sistolica', models.PositiveIntegerField(blank=True, null=True)),
                ('pressao_arterial_diastolica', models.PositiveIntegerField(blank=True, null=True)),
                ('fuma', models.BooleanField(default=False)),
                ('cigarros_por_dia', models.PositiveIntegerField(blank=True, null=True)),
                ('consome_alcool', models.CharField(choices=[('nunca', 'Nunca'), ('raramente', 'Raramente'), ('socialmente', 'Socialmente'), ('regularmente', 'Regularmente'), ('diariamente', 'Diariamente')], default='nunca', max_length=15)),
                ('pratica_exercicio', models.CharField(choices=[('sedentario', 'Sedentário'), ('leve', 'Exercício Leve'), ('moderado', 'Exercício Moderado'), ('intenso', 'Exercício Intenso'), ('atleta', 'Atleta')], default='sedentario', max_length=15)),
                ('dieta_principal', models.CharField(choices=[('tradicional', 'Dieta Tradicional'), ('mista', 'Dieta Mista'), ('vegetariana', 'Vegetariana'), ('vegana', 'Vegana'), ('especial', 'Dieta Especial')], default='tradicional', max_length=15)),
                ('horas_sono_media', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1.0')), django.core.validators.MaxValueValidator(Decimal('24.0'))])),
                ('telefone_principal', models.CharField(blank=True, max_length=20, null=True)),
                ('telefone_emergencia', models.CharField(blank=True, max_length=20, null=True)),
                ('contato_emergencia_nome', models.CharField(blank=True, max_length=100, null=True)),
                ('contato_emergencia_parentesco', models.CharField(blank=True, max_length=50, null=True)),
                ('condicoes_cronicas', models.JSONField(blank=True, default=list)),
                ('alergias_medicamentos', models.JSONField(blank=True, default=list)),
                ('alergias_alimentos', models.JSONField(blank=True, default=list)),
                ('menarca_idade', models.PositiveIntegerField(blank=True, null=True)),
                ('menopausa', models.BooleanField(blank=True, null=True)),
                ('usa_contraceptivos', models.BooleanField(blank=True, null=True)),
                ('tipo_contraceptivo', models.CharField(blank=True, max_length=50, null=True)),
                ('perfil_completo', models.BooleanField(default=False, editable=False)),
                ('porcentagem_preenchimento', models.PositiveIntegerField(default=0, editable=False)),
                ('ultima_atualizacao_dados', models.DateTimeField(auto_now=True)),
                ('aceita_pesquisas', models.BooleanField(default=True)),
                ('aceita_notificacoes', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geografia.cidade')),
                ('regiao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geografia.regiao')),
                ('tabanca_bairro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geografia.tabanca')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paciente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoFamiliar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pai_vivo', models.BooleanField(blank=True, null=True)),
                ('pai_idade_morte', models.PositiveIntegerField(blank=True, null=True)),
                ('pai_causa_morte', models.CharField(blank=True, max_length=200, null=True)),
                ('pai_doencas_cronicas', models.JSONField(blank=True, default=list)),
                ('mae_viva', models.BooleanField(blank=True, null=True)),
                ('mae_idade_morte', models.PositiveIntegerField(blank=True, null=True)),
                ('mae_causa_morte', models.CharField(blank=True, max_length=200, null=True)),
                ('mae_doencas_cronicas', models.JSONField(blank=True, default=list)),
                ('numero_irmaos', models.PositiveIntegerField(default=0)),
                ('irmaos_doencas_hereditarias', models.JSONField(blank=True, default=list)),
                ('historico_cancer_familia', models.BooleanField(default=False)),
                ('historico_diabetes_familia', models.BooleanField(default=False)),
                ('historico_hipertensao_familia', models.BooleanField(default=False)),
                ('historico_cardiopatias_familia', models.BooleanField(default=False)),
                ('historico_doencas_mentais_familia', models.BooleanField(default=False)),
                ('historico_malaria_recorrente', models.BooleanField(default=False)),
                ('historico_esquistossomose', models.BooleanField(default=False)),
                ('historico_oncocercose', models.BooleanField(default=False)),
                ('historico_tuberculose', models.BooleanField(default=False)),
                ('historico_febre_amarela', models.BooleanField(default=False)),
                ('observacoes_adicionais', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paciente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='historico_familiar', to='pacientes.paciente')),
            ],
            options={
                'verbose_name': 'Histórico Familiar',
                'verbose_name_plural': 'Históricos Familiares',
            },
        ),
        migrations.CreateModel(
            name='DoencaFamiliar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doenca', models.CharField(max_length=100)),
                ('parentesco', models.CharField(choices=[('pai', 'Pai'), ('mae', 'Mãe'), ('irmao', 'Irmão'), ('irma', 'Irmã'), ('avo_paterno', 'Avô Paterno'), ('avo_paterna', 'Avó Paterna'), ('avo_materno', 'Avô Materno'), ('avo_materna', 'Avó Materna'), ('tio', 'Tio'), ('tia', 'Tia'), ('primo', 'Primo'), ('prima', 'Prima'), ('outros', 'Outros')], max_length=15)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doencas_familiares', to='pacientes.paciente')),
            ],
        ),
        migrations.AddIndex(
            model_name='paciente',
            index=models.Index(fields=['numero_utente'], name='pacientes_p_numero__031c48_idx'),
        ),
        migrations.AddIndex(
            model_name='paciente',
            index=models.Index(fields=['regiao', 'cidade'], name='pacientes_p_regiao__c86352_idx'),
        ),
        migrations.AddIndex(
            model_name='paciente',
            index=models.Index(fields=['data_nascimento'], name='pacientes_p_data_na_b00ffd_idx'),
        ),
        migrations.AddIndex(
            model_name='paciente',
            index=models.Index(fields=['genero'], name='pacientes_p_genero_5817c9_idx'),
        ),
    ]
